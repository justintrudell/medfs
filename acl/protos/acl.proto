syntax = "proto3";

service Acl {
    rpc IsPermissionedForRead (PermissionRequest) returns (PermissionResponse) {}
    rpc IsPermissionedForWrite (PermissionRequest) returns (PermissionResponse) {}
    rpc GrantPermissions(GrantPermissionsRequest) returns (PermissionResponse) {}
    rpc RevokePermissions(RevokePermissionsRequest) returns (PermissionResponse) {}
    rpc SetPermissionsForFile(SetPermissionsForFileRequest) returns (PermissionResponse) {}
    rpc AddRecord (AddRecordRequest) returns (AddRecordResponse) {}
    rpc GetAllRecordsForUser (GetRecordsRequest) returns (ListOfRecords) {}
    rpc GetAllUsersForRecord (GetUsersRequest) returns (ListOfUsers) {}
}

message UserId {
    string id = 1;
}

message RecordId {
    string id = 1;
}

message PermissionRequest {
    UserId user = 1;
    RecordId record = 2;
}

message PermissionResponse {
    bool result = 1;
}

message GrantPermissionsRequest {
    UserId grantor = 1;
    repeated UserId recipients = 2;
    RecordId record = 3;
    enum Permission {
        READ = 0;
        WRITE = 1;
    }
    Permission permission = 4;
}

message RevokePermissionsRequest {
    UserId grantor = 1;
    repeated UserId recipients = 2;
    RecordId record = 3;
    enum Permission {
        READ = 0;
        WRITE = 1;
    }
    Permission permission = 4;
}

message SetPermissionsForFileRequest {
    UserId grantor = 1;
    RecordId record = 2;
    repeated UserPermissionEntry userPermMap = 3;
}

message UserPermissionEntry {
    UserId user = 1;
    enum Permission {
        READ = 0;
        WRITE = 1;
    }
    Permission permission = 2;
}

message AddRecordRequest {
    UserId creator = 1;
    RecordId record = 2;
}

message AddRecordResponse {
    bool result = 1;
}

message GetRecordsRequest {
    UserId requestor = 1;
    enum Permission {
        READ = 0;
        WRITE = 1;
    }
    Permission permission = 2;
}

message ListOfRecords {
    repeated RecordId records = 1;
}

message GetUsersRequest {
    RecordId record = 1;
    enum Permission {
        READ = 0;
        WRITE = 1;
    }
    Permission permission = 2;
}

message ListOfUsers {
    repeated UserId users = 1;
}
