syntax = "proto3";

service Acl {
    rpc IsPermissionedForRead (PermissionRequest) returns (PermissionResponse) {}
    rpc IsPermissionedForWrite (PermissionRequest) returns (PermissionResponse) {}
    rpc SetPermissionsForFile(SetPermissionsForFileRequest) returns (PermissionResponse) {}
    rpc AddRecord (AddRecordRequest) returns (AddRecordResponse) {}
    rpc GetAllRecordsForUser (GetRecordsRequest) returns (ListOfRecords) {}
    rpc GetAllUsersForRecord (GetUsersRequest) returns (ListOfUsers) {}
    rpc CleanDb(Empty) returns (Empty) {}
    rpc PopulateDb(Empty) returns (Empty) {}
    // Returns a list of records for which both the user in the request and the users in the 
    // response are permissioned to view/edit (agnostic for now).
    rpc FindCommonRecords(FindCommonRecordsRequest) returns (FindCommonRecordsResponse) {}
}

message Empty {

}

message UserId {
    string id = 1;
}

message RecordId {
    string id = 1;
}

message PermissionRequest {
    UserId user = 1;
    RecordId record = 2;
}

message PermissionResponse {
    bool result = 1;
}

message SetPermissionsForFileRequest {
    UserId grantor = 1;
    RecordId record = 2;
    repeated UserPermissionEntry userPermMap = 3;
}

message UserPermissionEntry {
    UserId user = 1;
    enum Permission {
        UNKNOWN = 0;
        READ = 1;
        WRITE = 2;
    }
    Permission permission = 2;
}

message RecordPermissionEntry {
    RecordId record = 1;
    enum Permission {
        UNKNOWN = 0;
        READ = 1;
        WRITE = 2;
    }
    Permission permission = 2;
}

message AddRecordRequest {
    UserId creator = 1;
    RecordId record = 2;
}

message AddRecordResponse {
    bool result = 1;
}

message GetRecordsRequest {
    UserId requestor = 1;
}

message ListOfRecords {
    repeated RecordPermissionEntry records = 1;
}

message GetUsersRequest {
    RecordId record = 1;
}

message ListOfUsers {
    repeated UserPermissionEntry users = 1;
}

message FindCommonRecordsRequest {
    // The user to find common records with
    UserId user = 1;
}

message FindCommonRecordsResponse {
    // Mapping of user id -> List of records
    map<string, ListOfRecords> records = 1;
}
